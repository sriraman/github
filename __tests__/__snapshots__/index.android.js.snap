// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    Object {
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Image
    source={
      Object {
        "uri": "https://assets-cdn.github.com/images/modules/logos_page/Octocat.png",
      }
    }
    style={
      Object {
        "alignSelf": "center",
        "height": 150,
        "width": 150,
      }
    }
  />
  <View
    style={
      Object {
        "borderColor": "#000",
        "borderRadius": 10,
        "borderWidth": 1,
        "flexDirection": "row",
        "margin": 10,
      }
    }
  >
    <TextInput
      onChangeText={[Function]}
      placeholder="Username"
      style={
        Object {
          "flex": 1,
          "paddingLeft": 10,
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
  </View>
  <View
    style={
      Object {
        "borderColor": "#000",
        "borderRadius": 10,
        "borderWidth": 1,
        "flexDirection": "row",
        "margin": 10,
      }
    }
  >
    <TextInput
      onChangeText={[Function]}
      placeholder="Password"
      secureTextEntry={true}
      style={
        Object {
          "flex": 1,
          "paddingLeft": 10,
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
  </View>
  <View
    style={
      Object {
        "borderColor": "#000",
        "borderRadius": 10,
        "borderWidth": 1,
        "flexDirection": "row",
        "margin": 10,
      }
    }
  >
    <TextInput
      onChangeText={[Function]}
      placeholder="Repo Name"
      style={
        Object {
          "flex": 1,
          "paddingLeft": 10,
        }
      }
      underlineColorAndroid="transparent"
      value="facebook/react-native"
    />
  </View>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    hitSlop={undefined}
    isTVSelectable={true}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "#000",
        "borderRadius": 10,
        "margin": 10,
        "opacity": 1,
        "padding": 10,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#fff",
          "fontSize": 22,
          "textAlign": "center",
        }
      }
    >
       Go 
    </Text>
  </View>
</View>
`;
